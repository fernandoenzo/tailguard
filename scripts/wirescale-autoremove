#!/usr/bin/env sh

change_keepalive() {
  interface=$1
  remote_pubkey=$2
  seconds=$3
  wg set "$interface" peer "$remote_pubkey" persistent-keepalive "$seconds"
}

autoremove() {
  echo "" > "/tmp/$interface.log"
  interface=$1
  remote_pubkey=$2
  caller=$3

  last_received=$(wg show "$interface" transfer | awk -v pubkey="$remote_pubkey" '$1 == pubkey {print $2}')
  sleep 10

  while { ip link show "$interface"; } > /dev/null 2>&1; do

    sleep $((30 - $(date +%S) % 30))

    if [ "$caller" -eq 1 ]; then
      change_keepalive "$interface" "$remote_pubkey" 1
      sleep 5
      change_keepalive "$interface" "$remote_pubkey" 10
      sleep 5
    else
      sleep 5
      change_keepalive "$interface" "$remote_pubkey" 1
      sleep 5
      change_keepalive "$interface" "$remote_pubkey" 10
    fi

    received=$(wg show "$interface" transfer | awk -v pubkey="$remote_pubkey" '$1 == pubkey {print $2}')

    if [ "$received" -gt "$last_received" ]; then
      last_received=$received
      sleep 10
    else
      echo "$(date) Bajando interfaz $interface" >> "/tmp/$interface.log"
      wg-quick down "/run/wirescale/$interface.conf"
      return 1
    fi

  done
  wg-quick down "/run/wirescale/$interface.conf"
}

# Ensure at least one argument (the function name) was provided
if [ "$#" -eq 0 ]; then
  echo "Error: You must provide the function name as the first argument."
  exit 1
fi

# Extract the first argument and then remove it from the argument list
func_name=$1
shift

# Verify the function exists before attempting to invoke it
if type "$func_name" > /dev/null 2>&1; then
  "$func_name" "$@"
else
  echo "Error: The function $func_name does not exist in this script."
  exit 1
fi
